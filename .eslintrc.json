{
  "env": {
    "es6": true,
    "browser": true,
    "mocha": true,
    "node": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "root": true,
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./",
    "sourceType": "module"
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsx-a11y/recommended",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "globals": {
    "Promise": true,
    "window": true,
    "$": true,
    "ga": true,
    "jQuery": true,
    "router": true
  },
  "settings": {
    "react": {
      "version": "16.4.2"
    }
  },
  "rules": {
    "import/named": 2,
    "import/no-named-as-default": 0,
    "import/no-named-as-default-member": 0,
    "import/order": 2
  },
  "overrides": [
    {
      "files": ["**/*.ts?(x)"],
      "rules": {
        "import/named": 0,
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"],
            "leadingUnderscore": "allowSingleOrDouble",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I[A-Z]|[a-zA-Z]Type$",
              "match": false
            }
          },
          {
            "selector": "typeProperty",
            "format": ["camelCase", "PascalCase"]
          },
          {
            "selector": "objectLiteralProperty",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allowSingleOrDouble"
          },
          {
            "selector": "function",
            "format": ["camelCase", "PascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["PascalCase"]
          }
        ],
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-return": "error"
      }
    },
    {
      "files": [
        "./tools/ui-components/**/*.test.[jt]s?(x)",
        "./client/**/*.test.[jt]s?(x)"
      ],
      "extends": [
        "plugin:testing-library/react",
        "plugin:jest-dom/recommended"
      ],
      "rules": { "import/named": 2 }
    },
    {
      "files": ["cypress/**/*.js"],
      "globals": {
        "cy": true,
        "Cypress": true
      }
    },
    {
      "files": ["gatsby-node.js"],
      "parser": "eslint-plugin-babel",
      "rules": {
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-return": "off"
      }
    },
    {
      "files": ["gatsby-browser.js"],
      "parserOptions": {
        "project": null
      },
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/await-thenable": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-implied-eval": "off",
        "@typescript-eslint/no-misused-promises": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/unbound-method": "off"
      }
    }
  ]
}
